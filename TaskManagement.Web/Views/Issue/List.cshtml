@using TaskManagement.Domain.Models
@using Microsoft.AspNetCore.Mvc.Localization
@model IssuesListViewModel
@inject IViewLocalizer Localizer

@{
    Layout = null;
    ViewData["Title"] = Localizer["Title"];
}

<h3>@ViewData["Title"]</h3>
@{
    var parentsIssues = Model.Issues.Where(issue => issue.IssueId == null).ToList();

    async Task GenerateIssue(Issue issue)
    {
        <li>
            <a class="issueName" onclick="loadIssueInfo(@issue.Id)">@issue.Name</a>
            <img class="redCross" src="img/red-cross.png" onclick="deleteIssue(@issue.Id)" alt="Delete issue"/>
        </li>
        
        if (issue.SubIssues != null)
        {
            await RecursiveGenerateIssue(issue);
        }

    }

    async Task RecursiveGenerateIssue(Issue issue)
    {
        <li class="subList">
            <ul>
                @foreach (var subIssue in issue.SubIssues)
                {
                    await GenerateIssue(subIssue);
                }
            </ul>
        </li>
    }

    if (parentsIssues.Any())
    {
        <ul>
            @foreach (var issue in parentsIssues)
            {
                await GenerateIssue(issue);
            }
        </ul>
    }
    else
    {
        <h4>@Localizer["EmptyList"]</h4>
    }
}