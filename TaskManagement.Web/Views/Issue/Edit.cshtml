@using Microsoft.AspNetCore.Mvc.TagHelpers
@using TaskManagement.Domain.Models
@using Microsoft.AspNetCore.Mvc.Localization
@model TaskManagement.Domain.Dtos.IssueDto
@inject IViewLocalizer Localizer
@inject IHtmlLocalizer<SharedResource> SharedLocalizer

@{
    Layout = null;
    ViewData["Title"] = Localizer["Title"];
}

<h2>@ViewData["Title"]</h2>

<form id="editForm">

    <p>
        <label asp-for="Id"></label>
        <input class="form-control" type="number" asp-for="Id" readonly/>
    </p>

    <p>
        <label asp-for="Name">@SharedLocalizer["Name"]</label>
        <input class="form-control" id="issueName" type="text" asp-for="Name" required/>
    </p>

    <p>
        <label asp-for="Description">@SharedLocalizer["Description"]</label>
        <textarea class="form-control" asp-for="Description" name="description" ></textarea>
    </p>

    <p>
        <label asp-for="Executors">@SharedLocalizer["Executors"]</label>
        <input class="form-control" id="issueExecutors" type="text" asp-for="Executors" required/>
    </p>

    <p>
        <label asp-for="Status">@SharedLocalizer["Status"]</label>
        <select class="form-control" asp-for="Status">
            @switch (Enum.Parse<Status>(Model.Status))
            {
                case Status.Assigned:
                {
                    <option value="@Model.Status">@SharedLocalizer[Model.Status]</option>
                    <option value="@Status.InProgress" >@SharedLocalizer[Status.InProgress.ToString()]</option>
                    break;
                }
                case Status.Stopped:
                {
                    foreach (var value in Enum.GetValues(typeof(Status)))
                    {
                        if (value.ToString() != Status.Completed.ToString())
                        {
                            <option value="@value">@SharedLocalizer[value.ToString()]</option>
                        }
                    }
                    break;
                }
                default:
                {
                    foreach (var value in Enum.GetValues(typeof(Status)))
                    {
                        <option value="@value">@SharedLocalizer[value.ToString()]</option>
                    }
                    break;
                }
            }
        </select>
    </p>

    <p>
        <label asp-for="EstimatedHours">@SharedLocalizer["EstimatedHours"]</label>
        <input class="form-control" type="number" asp-for="EstimatedHours" readonly="@Model.HasSubIssues"/>
    </p>

    <p>
        <label asp-for="Deadline">@SharedLocalizer["Deadline"]</label>
        <input class="form-control" type="date" asp-for="Deadline"/>
    </p>

    <button class="btn btn-success" type="button" onclick="updateIssue(@Model.Id)">@SharedLocalizer["EditButton"]</button>

</form>

<div id="summary"></div>
